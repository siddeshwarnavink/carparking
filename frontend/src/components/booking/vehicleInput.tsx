import React from 'react'
import { useFormikContext } from 'formik'

import styles from './vehicleInput.module.scss'
import { joinClasses } from '../../util'

interface VehicleInputProps {
    value: 'Car' | 'Bike' | 'Cycle'
}

const VehicleInput: React.FC<VehicleInputProps> = ({
    value
}) => {
    const formik = useFormikContext()

    const inputItems = [
        {
            label: '4 Wheeler',
            value: 'Car',
            icon: (
                <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none">
                    <path d="M20 42.5H40M20 42.5C20 45.2615 17.7614 47.5 15 47.5C12.2386 47.5 10 45.2615 10 42.5M20 42.5C20 39.7385 17.7614 37.5 15 37.5C12.2386 37.5 10 39.7385 10 42.5M40 42.5C40 45.2615 42.2385 47.5 45 47.5C47.7615 47.5 50 45.2615 50 42.5M40 42.5C40 39.7385 42.2385 37.5 45 37.5C47.7615 37.5 50 39.7385 50 42.5M10 42.5H9C7.59987 42.5 6.8998 42.5 6.36502 42.2275C5.89462 41.9878 5.51217 41.6055 5.27247 41.135C5 40.6003 5 39.9002 5 38.5V35.5C5 32.6997 5 31.2995 5.54497 30.23C6.02432 29.2893 6.78922 28.5243 7.73005 28.045C8.7996 27.5 10.1997 27.5 13 27.5H43C44.858 27.5 45.787 27.5 46.5642 27.623C50.8432 28.3008 54.1992 31.6568 54.877 35.9358C55 36.713 55 37.642 55 39.5C55 39.9645 55 40.1968 54.9692 40.391C54.7997 41.4608 53.9607 42.2997 52.891 42.4692C52.6967 42.5 52.4645 42.5 52 42.5H50M25 12.5V27.5M10 27.5L10.8288 22.5272C11.4225 18.9648 11.7194 17.1836 12.6082 15.847C13.3918 14.6687 14.4926 13.7362 15.7836 13.157C17.2482 12.5 19.054 12.5 22.6655 12.5H31.0777C33.4257 12.5 34.5997 12.5 35.6655 12.8236C36.609 13.1101 37.4865 13.5799 38.2482 14.2059C39.1087 14.9131 39.76 15.8899 41.0625 17.8436L47.5 27.5" stroke="#757575" stroke-width="5" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            )
        },
        {
            label: '2 Wheeler',
            value: 'Bike',
            icon: (
                <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none">
                    <path d="M2.73645 21.1576V18.2183C2.73645 18.2183 8.61469 17.6098 15.7094 20.3463C22.8042 23.0829 27.973 22.3737 28.6825 21.6639C29.3919 20.9549 32.635 17.8126 33.1421 17.407C33.6488 17.0021 34.6625 15.3804 35.7772 16.3937C35.972 16.5711 36.1794 16.6734 36.3891 16.7478L35.258 14.4228C35.075 14.0476 34.6946 13.8093 34.2772 13.8093H28.1759C27.588 13.8093 27.6282 13.3327 27.6282 12.7445C27.6282 12.1562 27.5882 11.6804 28.1759 11.6804H34.2772C35.5093 11.6804 36.633 12.3836 37.1718 13.4916L38.5717 16.3692C39.1679 15.9137 41.4552 14.3375 44.747 14.1642V21.2582C44.747 21.2582 42.3025 21.0393 40.8193 20.7865L42.5366 23.6777C44.9089 22.3467 47.6856 21.6739 50.6025 21.892C52.8356 22.0577 54.9113 22.7296 56.7261 23.7834L56.0539 25.7999C54.5704 25.0274 52.9097 24.5357 51.1354 24.4037C48.2348 24.1874 45.8128 24.6387 43.779 25.7695L45.7372 29.0655C47.0116 28.4841 48.4234 28.151 49.9159 28.151C55.4854 28.1509 60 32.6654 60 38.2349C60 43.8042 55.4854 48.3197 49.9157 48.3197C44.3464 48.3197 39.8313 43.8042 39.8313 38.2349C39.8313 35.0302 41.331 32.1805 43.6614 30.3339L41.7946 27.1908C39.9083 28.9132 38.4395 31.4299 37.2973 34.7884C37.2588 34.9025 35.935 36.0375 35.9291 36.1576L35.7609 35.7908C35.588 39.0395 33.0409 39.0969 33.0409 39.0969C33.0409 39.0969 26.4532 39.0969 23.5139 39.0969C19.8649 25.2115 5.16879 21.8666 2.73645 21.1576ZM43.885 38.2349C43.885 41.5655 46.5855 44.2656 49.9157 44.2656C53.2462 44.2656 55.9465 41.5655 55.9465 38.2349C55.9465 34.9051 53.2462 32.2041 49.9157 32.2041C49.1804 32.2041 48.4786 32.3427 47.8269 32.5835L49.9525 36.1609C51.0827 36.1812 51.9939 37.0998 51.9939 38.2348C51.9939 39.3824 51.0634 40.3128 49.9157 40.3128C48.7679 40.3128 47.8379 39.3824 47.8379 38.2348C47.8379 37.9998 47.8857 37.7768 47.9579 37.5654L45.7623 33.8706C44.6079 34.9692 43.885 36.5159 43.885 38.2349ZM40.5251 25.0543L38.9633 22.4251C38.2615 24.1788 37.4637 26.9626 36.8418 29.547C37.7549 27.801 39.0157 26.2781 40.5251 25.0543Z" fill="#757575" />
                    <path d="M10.0843 28.1509C15.6537 28.1509 20.1688 32.6655 20.1688 38.2349C20.1688 43.8042 15.6538 48.3197 10.0843 48.3197C4.515 48.3197 0 43.8042 0 38.2349C0 32.6654 4.515 28.1509 10.0843 28.1509ZM10.0843 44.2656C13.415 44.2656 16.1152 41.5655 16.1152 38.2349C16.1152 34.9051 13.415 32.2041 10.0843 32.2041C6.7541 32.2041 4.05398 34.9051 4.05398 38.2349C4.05398 41.5655 6.75422 44.2656 10.0843 44.2656Z" fill="#757575" />
                    <path d="M10.0843 36.1576C11.2321 36.1576 12.1621 37.0872 12.1621 38.2349C12.1621 39.3825 11.2321 40.313 10.0843 40.313C8.93672 40.313 8.0066 39.3825 8.0066 38.2349C8.00672 37.0872 8.93672 36.1576 10.0843 36.1576Z" fill="#757575" />
                </svg>
            )
        },
        {
            label: 'Cycle',
            value: 'Cycle',
            icon: (
                <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none">
                    <path d="M49.3125 26.85C48.1125 26.85 46.9875 27.075 45.8625 27.45L43.0125 21.825L47.8875 14.55C48.4125 13.8 48.1125 12.075 46.5375 12.075H40.3125C39.4125 12.075 38.7375 12.75 38.7375 13.65C38.7375 14.55 39.4125 15.225 40.3125 15.225H43.6125L40.3125 20.175H22.1625C21.4125 20.175 20.8875 20.85 20.8875 20.85L16.0875 27.9C14.7375 27.225 13.1625 26.85 11.5125 26.85C5.6625 26.85 0.9375 31.575 0.9375 37.425C0.9375 43.275 5.6625 48 11.5875 48C16.8375 48 21.2625 44.1 22.0125 39H30.6375C31.5375 39 31.9125 38.25 31.9125 38.25L40.9125 24.75L43.0875 28.875C40.4625 30.825 38.7375 33.9 38.7375 37.425C38.7375 43.275 43.4625 48 49.3125 48C55.1625 48 59.8875 43.275 59.8875 37.425C59.8875 31.575 55.0875 26.85 49.3125 26.85ZM30.7875 34.35L24.7875 23.25H38.1375L30.7875 34.35ZM22.0125 24.75L27.9375 35.85H21.9375C21.5625 33.45 20.3625 31.275 18.6375 29.7L22.0125 24.75ZM16.9125 32.325C17.8125 33.3 18.4875 34.5 18.7875 35.85H14.5125L16.9125 32.325ZM11.5875 44.775C7.5375 44.775 4.1625 41.475 4.1625 37.35C4.1625 33.225 7.4625 30 11.5875 30C12.5625 30 13.4625 30.225 14.3625 30.525L10.3125 36.525C9.6375 37.35 10.2375 38.925 11.5875 38.925H18.7875C18.0375 42.3 15.0375 44.775 11.5875 44.775ZM49.3125 44.775C45.2625 44.775 41.8875 41.475 41.8875 37.35C41.8875 35.1 42.9375 33 44.5875 31.65L47.9625 38.1C48.3375 38.7 49.2375 39.15 50.1375 38.775C50.8875 38.475 51.1875 37.425 50.8125 36.675L47.4375 30.3C48.0375 30.15 48.7125 30 49.3875 30C53.4375 30 56.8125 33.3 56.8125 37.425C56.8125 41.55 53.4375 44.775 49.3125 44.775ZM19.3125 17.625H25.0875C25.9875 17.625 26.6625 16.95 26.6625 16.05C26.6625 15.15 25.9875 14.475 25.0875 14.475H19.3125C18.4125 14.475 17.7375 15.15 17.7375 16.05C17.6625 16.875 18.4125 17.625 19.3125 17.625Z" fill="#757575" />
                </svg>
            )
        }
    ]

    return (
        <>
            <label className={styles.label}>Vehicle type:</label>
            <div className={styles.vehicleInput}>
                {inputItems.map(inputItem => {
                    return (
                        <div
                            className={joinClasses(
                                styles.item,
                                value === inputItem.value && styles.selected
                            )}
                            key={`VehicleInput-${inputItem.value}`}
                            onClick={() => {
                                formik.setFieldValue('vehicleType', inputItem.value)
                            }}
                        >
                            {inputItem.icon}
                            <span className={styles.label}>{inputItem.label}</span>
                        </div>
                    )
                })}
            </div>
        </>
    )
}

export default VehicleInput